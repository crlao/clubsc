{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cdrlao/Desktop/cs201/ClubSC/carlos/src/components/SearchBar.js\";\nimport '../stylesheets/master.css';\nimport '../stylesheets/SearchBar.css';\nimport React from 'react';\n\nconst SearchIcon = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    className: \"bi bi-search\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}; // TODO:\n// Search bar not responsive on mobile devices (button disappears)\n\n\n_c = SearchIcon;\n\nconst SearchBar = props => {\n  const populateSearchBar = btn => {\n    if (!btn) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-0 mr-2\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ml-0\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light mr-0\",\n          id: \"search-btn\",\n          type: \"Submit\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar d-flex flex-row align-items-center pl-3 pr-2\",\n    style: {\n      width: props.width\n    },\n    spellCheck: \"false flex-fill\",\n    children: populateSearchBar(props.button)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SearchBar;\nSearchBar.defaultProps = {\n  width: 'auto',\n  button: false\n};\nexport default SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchIcon\");\n$RefreshReg$(_c2, \"SearchBar\");","map":{"version":3,"sources":["/Users/cdrlao/Desktop/cs201/ClubSC/carlos/src/components/SearchBar.js"],"names":["React","SearchIcon","SearchBar","props","populateSearchBar","btn","width","button","defaultProps"],"mappings":";;AAAA,OAAQ,2BAAR;AACA,OAAQ,8BAAR;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,sBACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAA8B,IAAA,OAAO,EAAC,WAAtC;AAAkD,IAAA,SAAS,EAAC,cAA5D;AAA2E,IAAA,IAAI,EAAC,cAAhF;AAA+F,IAAA,KAAK,EAAC,4BAArG;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAyB,MAAA,CAAC,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAyB,MAAA,CAAC,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD,C,CASA;AACA;;;KAVMA,U;;AAWN,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACjC,QAAG,CAACA,GAAJ,EAAS;AACP,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATD,MASM;AACJ,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,MAAjB;AAAwB,UAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,EAAE,EAAC,YAA1C;AAAuD,UAAA,IAAI,EAAC,QAA5D;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;AACF,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,yDAAf;AAAyE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG;AAAf,KAAhF;AAAwG,IAAA,UAAU,EAAC,iBAAnH;AAAA,cACGF,iBAAiB,CAACD,KAAK,CAACI,MAAP;AADpB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BD;;MAAML,S;AA8BNA,SAAS,CAACM,YAAV,GAAyB;AACvBF,EAAAA,KAAK,EAAE,MADgB;AAEvBC,EAAAA,MAAM,EAAE;AAFe,CAAzB;AAKA,eAAeL,SAAf","sourcesContent":["import  '../stylesheets/master.css';\nimport  '../stylesheets/SearchBar.css';\nimport React from 'react';\n\nconst SearchIcon = () => {\n  return (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\n      <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\n    </svg>\n  );\n};\n\n// TODO:\n// Search bar not responsive on mobile devices (button disappears)\nconst SearchBar = (props) => {\n  const populateSearchBar = (btn) => {\n    if(!btn) {\n      return (\n        <React.Fragment>\n          <span className=\"ml-0 mr-2\">\n            <SearchIcon />\n          </span>\n          <input type=\"text\" />\n        </React.Fragment>\n      );\n    } else{\n      return (\n        <React.Fragment>\n          <input className=\"ml-0\" type=\"text\" />\n          <button className=\"btn btn-light mr-0\" id=\"search-btn\" type='Submit'>\n            <SearchIcon />\n          </button>\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <div className=\"search-bar d-flex flex-row align-items-center pl-3 pr-2\" style={{ width: props.width }} spellCheck=\"false flex-fill\">\n      {populateSearchBar(props.button)}\n    </div>\n  );\n};\n\nSearchBar.defaultProps = {\n  width: 'auto',\n  button: false\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}